@page "/Painel"
@using Commom.models.Usuarios
@using Entities.Entidades
@using JustoFront.Services
@using Justo.Entities
@inject IUsuarioService UsuarioService

<h3>Painel de Usuários</h3>

@if (usuarios == null)
{
    <span><em>Carregando...</em></span>
}
else if (usuarios.Count == 0)
{
    <p>Nenhum usuário encontrado.</p>
}
else
{
    <button class="btn btn-primary" @* @onclick="AdicionarUsuario" *@>
        <i class="bi bi-plus-square"></i>Adicionar
    </button>
    <table class="table">
        <thead style="text-align:center;">
            <tr>
                <th>Nome</th>
                <th>Email</th>
                <th>CPF</th>
                <th>Perfil</th>
                <th>Ações</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var usuario in usuarios)
            {
                <tr>
                    <td>
                        @if (!string.IsNullOrEmpty(usuario.UserName))
                        {
                            <span>@usuario.UserName</span>
                        }
                        else
                        {
                            <span>Usuário sem username cadastrado.</span>
                        }
                    </td>
                    <td>
                        @if (!string.IsNullOrEmpty(usuario.Email))
                        {
                            <span>@usuario.Email</span>
                        }
                        else
                        {
                            <span>Usuário sem email cadastrado.</span>
                        }
                    </td>
                    <td>
                        @if (!string.IsNullOrEmpty(usuario.CPF))
                        {
                            <span>@usuario.CPF</span>
                        }
                        else
                        {
                            <span>Usuário sem CPF cadastrado.</span>
                        }
                    </td>
                    <td>
                        @if (usuario.Roles != null)
                        {
                            @string.Join(", ", usuario.Roles)
                        }
                        else
                        {
                            <span>Usuário sem perfil cadastrado.</span>
                        }
                    </td>
                    <td>
                        <button class="btn btn-primary" @onclick="@(e => AbrirModal(usuario, "Update"))">Ver Detalhes</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<ModalPainelEdit UsuarioModal="usuarioSelecionado" ModalVisivel="ModalAberto" OnClose="FecharModal" />

<style>
    th, tr, thead, td {
        text-align: center;
    }

    .modal {
        display: none;
        position: fixed;
        z-index: 1050;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: hidden;
        outline: 0;
        background-color: rgba(0, 0, 0, 0.5);
    }

        .modal.show {
            display: block;
        }

    .modal-dialog {
        position: relative;
        margin: auto;
        width: 80%;
        max-width: 500px;
        margin-top: 10%;
    }

    .modal-content {
        position: relative;
        display: flex;
        flex-direction: column;
        width: 100%;
        pointer-events: auto;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid rgba(0, 0, 0, 0.2);
        border-radius: 0.3rem;
        outline: 0;
    }

    .modal-header {
        display: flex;
        align-items: flex-start;
        justify-content: space-between;
        padding: 1rem;
        border-bottom: 1px solid #dee2e6;
        border-top-left-radius: 0.3rem;
        border-top-right-radius: 0.3rem;
    }

    .modal-body {
        position: relative;
        flex: 1 1 auto;
        padding: 1rem;
    }

    .modal-footer {
        display: flex;
        align-items: center;
        justify-content: flex-end;
        padding: 1rem;
        border-top: 1px solid #dee2e6;
    }
</style>

@code {
    private string TipoModal { get; set; }
    private List<UsuarioComRole> usuarios;
    private bool ModalAberto = false;
    public UsuarioComRole usuarioSelecionado;

    protected override async Task OnInitializedAsync()
    {
        usuarios = await UsuarioService.GetUsuariosAsync();
    }

    public void AbrirModal(UsuarioComRole usuario, string tipo)
    {
        usuarioSelecionado = usuario;
        TipoModal = tipo;
        ModalAberto = true;
        StateHasChanged();
    }

    public void FecharModal()
    {
        ModalAberto = false;
        TipoModal = "";
        StateHasChanged();
    }

    // public void AdicionarUsuario()
    // {
    //     usuarioSelecionado = new UsuarioComRole();
    //     TipoModal = "Criar";
    //     ModalAberto = true;
    //     StateHasChanged();
    // }
}
