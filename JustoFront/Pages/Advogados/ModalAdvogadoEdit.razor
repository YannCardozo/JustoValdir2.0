@using Commom.models.Advogados
@using Commom.models.Usuarios
@using JustoFront.Services
@using JustoFront.Services.Interface
@inject IAdvogadoService AdvogadoService
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@using MudBlazor

<MudDialog>
    <DialogContent>
        @if (AdvogadoModal != null)
        {
            <EditForm Model="AdvogadoModal">
                <DataAnnotationsValidator />
                <MudTextField @bind-Value="AdvogadoModal.Nome" Label="Nome" Variant="Variant.Outlined" />
                <ValidationMessage For="@(() => AdvogadoModal.Nome)" />
                <MudTextField @bind-Value="AdvogadoModal.Cpf" Label="Cpf" Variant="Variant.Outlined" />
                <ValidationMessage For="@(() => AdvogadoModal.Cpf)" />
                <MudTextField @bind-Value="AdvogadoModal.Oab" Label="OAB" Variant="Variant.Outlined" />
                <ValidationMessage For="@(() => AdvogadoModal.Oab)" />
                <MudButton OnClick="@(e => SalvarModal(AdvogadoModal))" ButtonType="ButtonType.Submit" Color="Color.Secondary">Salvar</MudButton>
                <MudButton OnClick="CloseModal" Color="Color.Secondary">Fechar</MudButton>
            </EditForm>
            <CarregarTransicao Mensagem="" Redireciona="false" MostraComponente="MostraComponenteEdit" />
        }
    </DialogContent>
</MudDialog>

@code {
    private bool MostraComponenteEdit = false;

    [Parameter]
    public AdvogadoDTO AdvogadoModal { get; set; }

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    private void CloseModal()
    {
        MudDialog.Close();
    }



    private async Task SalvarModal(AdvogadoDTO AdvogadoModal)
    {

        MostraComponenteEdit = true;
        //var verificaAdvogadoAEditar = await AdvogadoService.VerificarAdvogadoAsync(AdvogadoModal, true);
        // if(verificaAdvogadoAEditar == null)
        // {
        try
        {
            var mensagemsucesso = "Advogado alterado com sucesso.";
            var response = await AdvogadoService.UpdateAdvogadoAsync(AdvogadoModal);

            if (response != null && response.IsSuccessStatusCode)
            {
                await JSRuntime.InvokeVoidAsync("alert", mensagemsucesso);
                MudDialog.Close(DialogResult.Ok(true));
            }
            else
            {
                string mensagemErro = response != null
                    ? $"Erro ao alterar Advogado: {response.ReasonPhrase}"
                    : "Erro ao alterar Advogado: Nenhuma resposta recebida.";
                await JSRuntime.InvokeVoidAsync("alert", mensagemErro);
            }

            MostraComponenteEdit = false;
            CloseModal();
            Navigation.NavigateTo("/advogados/index", true);
        }
        catch (Exception ex)
        {
            string mensagemErro = "Erro ao alterar Advogado.";
            await JSRuntime.InvokeVoidAsync("alert", mensagemErro);
            MostraComponenteEdit = false;
            CloseModal();
            Navigation.NavigateTo("/advogados/index", true);
        }

    }
}
